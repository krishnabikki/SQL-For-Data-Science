/*******Q1.Pull a list of customer ids with the customer’s full name, and address, along with combining their city and country together. 
Be sure to make a space in between these two and make it UPPER CASE. (e.g. LOS ANGELES USA)********/

SELECT CUSTOMERID,
       FIRSTNAME || " " || LASTNAME AS FULLNAME,
       ADDRESS,
       UPPER(CITY || " "|| STATE) AS CITYSTATE
    FROM CUSTOMERS 
    
/*******Q2.Create a new employee user id by combining the first 4 letters of the employee’s first name with the first 2 letters of the employee’s last name. 
Make the new field lower case and pull each individual step to show your work.******/

SELECT FIRSTNAME,
       LASTNAME,
       LOWER(SUBSTR(FIRSTNAME,1,4) || SUBSTR(LASTNAME,1,2)) AS NEW_EMP_ID
    FROM EMPLOYEES
    
    
 /******Q3.Show a list of employees who have worked for the company for 15 or more years using the current date function. Sort by lastname ascending.******/
 
 SELECT FIRSTNAME,
    LASTNAME,
    (STRFTIME('%Y','NOW') - STRFTIME('%Y',HIREDATE)) AS NO_OF_YEAR_EXP
FROM EMPLOYEES
WHERE NO_OF_YEAR_EXP >=15
ORDER BY LASTNAME ASC

/******SECOND APPROACH********/
SELECT FIRSTNAME,
       (EXTRACT(YEAR FROM CURDATE()) - EXTRACT(YEAR FROM BIRTHDATE)) AS AGE
FROM EMPLOYEES;

/*******Q5.Find the cities with the most customers and rank in descending order.********/

SELECT CITY,COUNT(*)
  FROM CUSTOMERS
  GROUP BY CITY
  ORDER BY COUNT(*) DESC
  
/******Q6.Create a new customer invoice id by combining a customer’s invoice id with their first and last name while ordering your query in the 
following order: firstname, lastname, and invoiceID.  ******/
SELECT A.FIRSTNAME,
       A.LASTNAME,
       B.INVOICEID,
       A.FIRSTNAME || A.LASTNAME || B.INVOICEID AS NEW_INVOICE_ID   
    FROM CUSTOMERS A
    INNER JOIN INVOICES B
    ON A.CUSTOMERID = B.CUSTOMERID
    WHERE NEW_INVOICE_ID LIKE 'AstridGruber%'
